# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ modulesPath, config, pkgs, lib, ... }:

with lib;

let 
  home-manager = builtins.fetchTarball "https://github.com/nix-community/home-manager/archive/release-21.11.tar.gz"; 
in
{
  imports =
    [ # Include the default lxd configuration.
      "${modulesPath}/virtualisation/lxc-container.nix"
      # Include the container-specific autogenerated configuration.
      /etc/nixos/lxd.nix
      /etc/nixos/orbstack.nix
      # https://nixos.wiki/wiki/Home_Manager
      (import "${home-manager}/nixos")
    ];

  # networking.hostName = mkForce "nixos"; # Overwrite the hostname.
  # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.

  # Set your time zone.
  # time.timeZone = "Europe/Amsterdam";

  # The global useDHCP flag is deprecated, therefore explicitly set to false here.
  # Per-interface useDHCP will be mandatory in the future, so this generated config
  # replicates the default behaviour.
  networking.useDHCP = false;
  networking.interfaces.eth0.useDHCP = true;

  # Configure network proxy if necessary
  # networking.proxy.default = "http://user:password@proxy:port/";
  # networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";

  # Select internationalisation properties.
  # i18n.defaultLocale = "en_US.UTF-8";
  # console = {
  #   font = "Lat2-Terminus16";
  #   keyMap = "us";
  # };

  # Enable the X11 windowing system.
  # services.xserver.enable = true;

  # Configure keymap in X11
  # services.xserver.layout = "us";
  # services.xserver.xkbOptions = "eurosign:e";

  # Enable CUPS to print documents.
  # services.printing.enable = true;

  # Enable sound.
  # sound.enable = true;
  # hardware.pulseaudio.enable = true;

  # Enable touchpad support (enabled default in most desktopManager).
  # services.xserver.libinput.enable = true;

  # Define a user account. Don't forget to set a password with ‘passwd’.
  users.users.justin = {
    isNormalUser = true;
    extraGroups = [ "wheel" ]; # Enable ‘sudo’ for the user.
  };

  # List packages installed in system profile. To search, run:
  # $ nix search wget
  environment.systemPackages = with pkgs; [
    bat
    diff-so-fancy
    direnv
    git
    gnumake
    helix
    man
    tmux
    vim
  ];
 
  # https://nixos.wiki/wiki/Nix_command 
  nix.settings.experimental-features = [
    "nix-command"
    "flakes"
  ];

  home-manager.users.justin = {
    home.stateVersion = "23.05";

    programs.bash = {
      enable = true;
      sessionVariables = {
        EDITOR = "hx";
      };
      shellAliases = {
        cat = "bat";
        s = "git st";
        b = "git b";
        d = "git d";
      };
    };

    programs.direnv = {
      enable = true;
      enableBashIntegration = true;
    };

    programs.git = {
      enable = true;
      userName = "Justin Blake";
      userEmail = "justin@blaix.com";
      diff-so-fancy.enable = true;
      aliases = {
        b = "branch";
        d = "diff";
        co = "checkout";
        st = "status -sb";
        ci = "commit -v";
      };
      extraConfig = {
        github = {
          user = "blaix";
        };
        init = {
          defaultBranch = "main";
        };
      };
    };

    programs.helix = {
      enable = true;
      settings = {
        theme = "dracula";
        editor = {
          auto-format = true;
          true-color = true;
          cursor-shape = {
            insert = "bar";
            normal = "block";
            select = "underline";
          };
          gutters = [
            "diagnostics"
            "line-numbers"
            "spacer"
          ];
        };
        keys = {
          normal = {
            esc = [
              "collapse_selection"
              "keep_primary_selection"
            ];
            "C-[" = [
              "collapse_selection"
              "keep_primary_selection"
            ];
          };
          insert = {
            # ctrl-[ doesn't act as escape in helix :(
            # https://github.com/helix-editor/helix/issues/6551
            "C-[" = [
              "normal_mode"
            ];
          };
        };
      };
    };

    programs.tmux = {
      enable = true;
      prefix = "C-a";
      extraConfig = ''
        set -g default-terminal "xterm-256color"
        # Prevent delay when hitting esc
        set -g escape-time 10
        # Switch to last window with ctrl-a, just like screen
        bind-key C-a last-window
        # Send a literal ctrl-a with c-a a
        bind a send-keys C-a
        # Set status bar
        set -g status-bg black
        set -g status-fg white
        set -g status-right '"#H" %a %b-%d %I:%M%p'
        # Lots of room for long session names
        set -g status-left-length 30
        # Big history
        set-option -g history-limit 9000
        # Use vim movements to move around panes
        bind h select-pane -L
        bind j select-pane -D
        bind k select-pane -U
        bind l select-pane -R
        # Use capital vim movements to resize panes
        bind J resize-pane -D 2
        bind K resize-pane -U 2
        bind H resize-pane -L 2
        bind L resize-pane -R 2
      '';
    };
  };
  
  # Some programs need SUID wrappers, can be configured further or are
  # started in user sessions.
  # programs.mtr.enable = true;
  # programs.gnupg.agent = {
  #   enable = true;
  #   enableSSHSupport = true;
  # };

  # List services that you want to enable:

  # Enable the OpenSSH daemon.
  # services.openssh.enable = true;

  # Open ports in the firewall.
  # networking.firewall.allowedTCPPorts = [ ... ];
  # networking.firewall.allowedUDPPorts = [ ... ];
  # Or disable the firewall altogether.
  # networking.firewall.enable = false;

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. It‘s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  system.stateVersion = "21.05"; # Did you read the comment?

  # As this is intended as a stadalone image, undo some of the minimal profile stuff
  documentation.enable = true;
  documentation.nixos.enable = true;
  environment.noXlibs = false;
}
